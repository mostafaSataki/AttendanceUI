// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model User {
  id        String   @id @default(cuid())
  username  String   @unique
  email     String   @unique
  password  String
  name      String?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  // Relations
  projects  Project[]

  @@map("users")
}

model Project {
  id          String   @id @default(cuid())
  name        String
  description String?
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  // Relations
  ownerId String
  owner   User   @relation(fields: [ownerId], references: [id], onDelete: Cascade)
  
  lists   List[]

  @@map("projects")
}

model List {
  id        String   @id @default(cuid())
  title     String
  position  Int      // For ordering lists within a project
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  // Relations
  projectId String
  project   Project   @relation(fields: [projectId], references: [id], onDelete: Cascade)
  
  cards     Card[]

  @@map("lists")
}

model Card {
  id          String   @id @default(cuid())
  title       String
  description String?
  position    Int      // For ordering cards within a list
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  // Relations
  listId String
  list   List   @relation(fields: [listId], references: [id], onDelete: Cascade)

  @@map("cards")
}